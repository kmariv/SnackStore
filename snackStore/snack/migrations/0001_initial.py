# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-02-23 05:02
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('purchase_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.PositiveSmallIntegerField(default=0, verbose_name='Quantity')),
                ('action_date', models.DateTimeField(auto_now_add=True, verbose_name='Action date')),
            ],
        ),
        migrations.CreateModel(
            name='Snack',
            fields=[
                ('snack_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=50, verbose_name='Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('stock_quantity', models.PositiveSmallIntegerField(default=0, verbose_name='Snack')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Price')),
            ],
        ),
        migrations.CreateModel(
            name='SnackPopularity',
            fields=[
                ('snack_popularity_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_date', models.DateTimeField(auto_now_add=True, verbose_name='Action date')),
                ('snack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Snack_SnackPopularity', to='snack.Snack', verbose_name='Snack')),
            ],
        ),
        migrations.CreateModel(
            name='SnackPriceLog',
            fields=[
                ('snack_price_log_id', models.AutoField(primary_key=True, serialize=False)),
                ('old_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Old Price')),
                ('new_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='New Price')),
                ('action_date', models.DateTimeField(auto_now_add=True, verbose_name='Action date')),
                ('snack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Snack_SnackPriceLog', to='snack.Snack', verbose_name='Snack')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='Username')),
                ('name', models.CharField(default='', max_length=50, verbose_name='Name')),
                ('last_name', models.CharField(max_length=50, unique=True, verbose_name='Last name')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is admin')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
            ],
        ),
        migrations.AddField(
            model_name='snackpricelog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='User_SnackPriceLog', to='snack.User', verbose_name='User'),
        ),
        migrations.AddField(
            model_name='snackpopularity',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='User_SnackPopularity', to='snack.User', verbose_name='User'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='snack',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Snack_Purchase', to='snack.Snack', verbose_name='Snack'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='User_Purchase', to='snack.User', verbose_name='User'),
        ),
    ]
